apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: Node-Consumer-template
  title: Node Consumer App Template
  description: Create a basic Producer running app
  tags:
    - recommended
    - nodejs
spec:
  owner: bala
  type: service
  parameters:
    - title: Fill in some details
      required:
        - bootstrap-servers
        - topic
      properties: 
        bootstrap-servers:
          title: Bootstrap Servers
          type: string
          description: Kafka bootstrap servers
        topic:
          title: Topic
          type: string
          description: Kafka topic
        sasl:
          title: SASL
          type: object
          properties:
            mechanism:
              title: Mechanism
              type: string
              enum:
                - SCRAM-SHA-512
              default: SCRAM-SHA-512
              description: SASL mechanism
            username:
              title: Username
              type: string
              description: SASL username
            password:
              title: Password
              type: string
              description: SASL password
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: fetch
      name: Template Node Consumer Skeleton
      action: fetch:template
      input:
        url: ./node_consumer_skeleton
        values:
          bootstrap-servers: ${{ parameters.bootstrap-servers }}
          topic: ${{ parameters.topic }}
          sasl:
            mechanism: ${{ parameters.sasl.mechanism }}
            username: ${{ parameters.sasl.username }}
            password: ${{ parameters.sasl.password }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          # owner: ${{ parameters.owner }}
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        topic: This is ${{ parameters.topic }}
        repoUrl: ${{ parameters.repoUrl }}
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'
  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
